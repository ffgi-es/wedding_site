@using wedding_site.Domain
@using wedding_site.Components.Pages.Sections.RsvpFragments

@inject IRsvpRepo rsvpRepo
@inject ILogger<RsvpSection> logger
@rendermode InteractiveServer

<Tile TileId="rsvp">
    <TileContent>
        <h1>RSVP</h1>

        @if (rsvp != null)
        {
            <RsvpPassword Rsvp=@rsvp />
        }
        else
        {
            <label>RSVP: </label>
            <input @bind="Id" />
            <button @onclick="UpdateRsvp">Submit</button>
            <p>@Message</p>
        }
    </TileContent>
</Tile>

@code
{
    [Parameter]
    public string Id {get; set;}

    private Domain.Rsvp? rsvp;

    private string Message = "";

    protected override async Task OnInitializedAsync()
    {
        await UpdateRsvp();
    }

    private async Task UpdateRsvp()
    {
        logger.LogInformation($"input id: {Id}");

        if (Id != null)
            rsvp = await rsvpRepo.GetRsvp(Id);
    }
}